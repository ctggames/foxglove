//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.03.25 at 03:40:09 PM NZDT 
//


package nz.co.ctg.jmsfx.svg;

import javax.xml.bind.annotation.XmlRegistry;

import nz.co.ctg.jmsfx.svg.animate.Animate;
import nz.co.ctg.jmsfx.svg.animate.AnimateColor;
import nz.co.ctg.jmsfx.svg.animate.AnimateMotion;
import nz.co.ctg.jmsfx.svg.animate.AnimateTransform;
import nz.co.ctg.jmsfx.svg.animate.Mpath;
import nz.co.ctg.jmsfx.svg.animate.Set;
import nz.co.ctg.jmsfx.svg.clip.ClipPath;
import nz.co.ctg.jmsfx.svg.clip.Mask;
import nz.co.ctg.jmsfx.svg.description.Desc;
import nz.co.ctg.jmsfx.svg.description.Metadata;
import nz.co.ctg.jmsfx.svg.description.Title;
import nz.co.ctg.jmsfx.svg.document.Anchor;
import nz.co.ctg.jmsfx.svg.document.Cursor;
import nz.co.ctg.jmsfx.svg.document.Defs;
import nz.co.ctg.jmsfx.svg.document.ForeignObject;
import nz.co.ctg.jmsfx.svg.document.Image;
import nz.co.ctg.jmsfx.svg.document.Marker;
import nz.co.ctg.jmsfx.svg.document.Script;
import nz.co.ctg.jmsfx.svg.document.FXVGGroup;
import nz.co.ctg.jmsfx.svg.document.Switch;
import nz.co.ctg.jmsfx.svg.document.Symbol;
import nz.co.ctg.jmsfx.svg.document.Use;
import nz.co.ctg.jmsfx.svg.document.View;
import nz.co.ctg.jmsfx.svg.filter.FeBlend;
import nz.co.ctg.jmsfx.svg.filter.FeColorMatrix;
import nz.co.ctg.jmsfx.svg.filter.FeComponentTransfer;
import nz.co.ctg.jmsfx.svg.filter.FeComposite;
import nz.co.ctg.jmsfx.svg.filter.FeConvolveMatrix;
import nz.co.ctg.jmsfx.svg.filter.FeDiffuseLighting;
import nz.co.ctg.jmsfx.svg.filter.FeDisplacementMap;
import nz.co.ctg.jmsfx.svg.filter.FeDistantLight;
import nz.co.ctg.jmsfx.svg.filter.FeFlood;
import nz.co.ctg.jmsfx.svg.filter.FeFuncA;
import nz.co.ctg.jmsfx.svg.filter.FeFuncB;
import nz.co.ctg.jmsfx.svg.filter.FeFuncG;
import nz.co.ctg.jmsfx.svg.filter.FeFuncR;
import nz.co.ctg.jmsfx.svg.filter.FeGaussianBlur;
import nz.co.ctg.jmsfx.svg.filter.FeImage;
import nz.co.ctg.jmsfx.svg.filter.FeMerge;
import nz.co.ctg.jmsfx.svg.filter.FeMergeNode;
import nz.co.ctg.jmsfx.svg.filter.FeMorphology;
import nz.co.ctg.jmsfx.svg.filter.FeOffset;
import nz.co.ctg.jmsfx.svg.filter.FePointLight;
import nz.co.ctg.jmsfx.svg.filter.FeSpecularLighting;
import nz.co.ctg.jmsfx.svg.filter.FeSpotLight;
import nz.co.ctg.jmsfx.svg.filter.FeTile;
import nz.co.ctg.jmsfx.svg.filter.FeTurbulence;
import nz.co.ctg.jmsfx.svg.filter.Filter;
import nz.co.ctg.jmsfx.svg.paint.ColorProfile;
import nz.co.ctg.jmsfx.svg.paint.LinearGradient;
import nz.co.ctg.jmsfx.svg.paint.Pattern;
import nz.co.ctg.jmsfx.svg.paint.RadialGradient;
import nz.co.ctg.jmsfx.svg.paint.Stop;
import nz.co.ctg.jmsfx.svg.shape.FXVGCircle;
import nz.co.ctg.jmsfx.svg.shape.FXVGEllipse;
import nz.co.ctg.jmsfx.svg.shape.FXVGLine;
import nz.co.ctg.jmsfx.svg.shape.FXVGPath;
import nz.co.ctg.jmsfx.svg.shape.FXVGPolygon;
import nz.co.ctg.jmsfx.svg.shape.FXVGPolyline;
import nz.co.ctg.jmsfx.svg.shape.FXVGRectangle;
import nz.co.ctg.jmsfx.svg.style.Style;
import nz.co.ctg.jmsfx.svg.text.AltGlyph;
import nz.co.ctg.jmsfx.svg.text.AltGlyphDef;
import nz.co.ctg.jmsfx.svg.text.AltGlyphItem;
import nz.co.ctg.jmsfx.svg.text.Font;
import nz.co.ctg.jmsfx.svg.text.FontFace;
import nz.co.ctg.jmsfx.svg.text.FontFaceFormat;
import nz.co.ctg.jmsfx.svg.text.FontFaceName;
import nz.co.ctg.jmsfx.svg.text.FontFaceSrc;
import nz.co.ctg.jmsfx.svg.text.FontFaceUri;
import nz.co.ctg.jmsfx.svg.text.Glyph;
import nz.co.ctg.jmsfx.svg.text.GlyphRef;
import nz.co.ctg.jmsfx.svg.text.HorizontalKerning;
import nz.co.ctg.jmsfx.svg.text.MissingGlyph;
import nz.co.ctg.jmsfx.svg.text.FXVGText;
import nz.co.ctg.jmsfx.svg.text.TextPath;
import nz.co.ctg.jmsfx.svg.text.TextReference;
import nz.co.ctg.jmsfx.svg.text.TextSpan;
import nz.co.ctg.jmsfx.svg.text.VerticalKerning;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the nz.co.ctg.jmsfx.svg package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: nz.co.ctg.jmsfx.svg
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Symbol }
     * 
     */
    public Symbol createSymbol() {
        return new Symbol();
    }

    /**
     * Create an instance of {@link Desc }
     * 
     */
    public Desc createDesc() {
        return new Desc();
    }

    /**
     * Create an instance of {@link Title }
     * 
     */
    public Title createTitle() {
        return new Title();
    }

    /**
     * Create an instance of {@link Metadata }
     * 
     */
    public Metadata createMetadata() {
        return new Metadata();
    }

    /**
     * Create an instance of {@link Animate }
     * 
     */
    public Animate createAnimate() {
        return new Animate();
    }

    /**
     * Create an instance of {@link Set }
     * 
     */
    public Set createSet() {
        return new Set();
    }

    /**
     * Create an instance of {@link AnimateMotion }
     * 
     */
    public AnimateMotion createAnimateMotion() {
        return new AnimateMotion();
    }

    /**
     * Create an instance of {@link AnimateColor }
     * 
     */
    public AnimateColor createAnimateColor() {
        return new AnimateColor();
    }

    /**
     * Create an instance of {@link AnimateTransform }
     * 
     */
    public AnimateTransform createAnimateTransform() {
        return new AnimateTransform();
    }

    /**
     * Create an instance of {@link FXVGSvgElement }
     * 
     */
    public FXVGSvgElement createSvgRootElement() {
        return new FXVGSvgElement();
    }

    /**
     * Create an instance of {@link FXVGGroup }
     * 
     */
    public FXVGGroup createSvgGroup() {
        return new FXVGGroup();
    }

    /**
     * Create an instance of {@link Defs }
     * 
     */
    public Defs createDefs() {
        return new Defs();
    }

    /**
     * Create an instance of {@link Use }
     * 
     */
    public Use createUse() {
        return new Use();
    }

    /**
     * Create an instance of {@link Switch }
     * 
     */
    public Switch createSwitch() {
        return new Switch();
    }

    /**
     * Create an instance of {@link Image }
     * 
     */
    public Image createImage() {
        return new Image();
    }

    /**
     * Create an instance of {@link Style }
     * 
     */
    public Style createStyle() {
        return new Style();
    }

    /**
     * Create an instance of {@link FXVGPath }
     * 
     */
    public FXVGPath createSvgPath() {
        return new FXVGPath();
    }

    /**
     * Create an instance of {@link FXVGRectangle }
     * 
     */
    public FXVGRectangle createSvgRectangle() {
        return new FXVGRectangle();
    }

    /**
     * Create an instance of {@link FXVGCircle }
     * 
     */
    public FXVGCircle createSvgCircle() {
        return new FXVGCircle();
    }

    /**
     * Create an instance of {@link FXVGLine }
     * 
     */
    public FXVGLine createSvgLine() {
        return new FXVGLine();
    }

    /**
     * Create an instance of {@link FXVGEllipse }
     * 
     */
    public FXVGEllipse createSvgEllipse() {
        return new FXVGEllipse();
    }

    /**
     * Create an instance of {@link FXVGPolyline }
     * 
     */
    public FXVGPolyline createSvgPolyline() {
        return new FXVGPolyline();
    }

    /**
     * Create an instance of {@link FXVGPolygon }
     * 
     */
    public FXVGPolygon createSvgPolygon() {
        return new FXVGPolygon();
    }

    /**
     * Create an instance of {@link FXVGText }
     * 
     */
    public FXVGText createSvgText() {
        return new FXVGText();
    }

    /**
     * Create an instance of {@link AltGlyphDef }
     * 
     */
    public AltGlyphDef createAltGlyphDef() {
        return new AltGlyphDef();
    }

    /**
     * Create an instance of {@link Marker }
     * 
     */
    public Marker createMarker() {
        return new Marker();
    }

    /**
     * Create an instance of {@link ColorProfile }
     * 
     */
    public ColorProfile createColorProfile() {
        return new ColorProfile();
    }

    /**
     * Create an instance of {@link LinearGradient }
     * 
     */
    public LinearGradient createLinearGradient() {
        return new LinearGradient();
    }

    /**
     * Create an instance of {@link RadialGradient }
     * 
     */
    public RadialGradient createRadialGradient() {
        return new RadialGradient();
    }

    /**
     * Create an instance of {@link Pattern }
     * 
     */
    public Pattern createPattern() {
        return new Pattern();
    }

    /**
     * Create an instance of {@link ClipPath }
     * 
     */
    public ClipPath createClipPath() {
        return new ClipPath();
    }

    /**
     * Create an instance of {@link Mask }
     * 
     */
    public Mask createMask() {
        return new Mask();
    }

    /**
     * Create an instance of {@link Filter }
     * 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link Cursor }
     * 
     */
    public Cursor createCursor() {
        return new Cursor();
    }

    /**
     * Create an instance of {@link Anchor }
     * 
     */
    public Anchor createAnchor() {
        return new Anchor();
    }

    /**
     * Create an instance of {@link View }
     * 
     */
    public View createView() {
        return new View();
    }

    /**
     * Create an instance of {@link Script }
     * 
     */
    public Script createScript() {
        return new Script();
    }

    /**
     * Create an instance of {@link Font }
     * 
     */
    public Font createFont() {
        return new Font();
    }

    /**
     * Create an instance of {@link FontFace }
     * 
     */
    public FontFace createFontFace() {
        return new FontFace();
    }

    /**
     * Create an instance of {@link ForeignObject }
     * 
     */
    public ForeignObject createForeignObject() {
        return new ForeignObject();
    }

    /**
     * Create an instance of {@link AltGlyph }
     * 
     */
    public AltGlyph createAltGlyph() {
        return new AltGlyph();
    }

    /**
     * Create an instance of {@link GlyphRef }
     * 
     */
    public GlyphRef createGlyphRef() {
        return new GlyphRef();
    }

    /**
     * Create an instance of {@link AltGlyphItem }
     * 
     */
    public AltGlyphItem createAltGlyphItem() {
        return new AltGlyphItem();
    }

    /**
     * Create an instance of {@link FeImage }
     * 
     */
    public FeImage createFeImage() {
        return new FeImage();
    }

    /**
     * Create an instance of {@link FeConvolveMatrix }
     * 
     */
    public FeConvolveMatrix createFeConvolveMatrix() {
        return new FeConvolveMatrix();
    }

    /**
     * Create an instance of {@link FeComposite }
     * 
     */
    public FeComposite createFeComposite() {
        return new FeComposite();
    }

    /**
     * Create an instance of {@link HorizontalKerning }
     * 
     */
    public HorizontalKerning createHkern() {
        return new HorizontalKerning();
    }

    /**
     * Create an instance of {@link FeOffset }
     * 
     */
    public FeOffset createFeOffset() {
        return new FeOffset();
    }

    /**
     * Create an instance of {@link FeTurbulence }
     * 
     */
    public FeTurbulence createFeTurbulence() {
        return new FeTurbulence();
    }

    /**
     * Create an instance of {@link FeFuncG }
     * 
     */
    public FeFuncG createFeFuncG() {
        return new FeFuncG();
    }

    /**
     * Create an instance of {@link TextSpan }
     * 
     */
    public TextSpan createTspan() {
        return new TextSpan();
    }

    /**
     * Create an instance of {@link Mpath }
     * 
     */
    public Mpath createMpath() {
        return new Mpath();
    }

    /**
     * Create an instance of {@link Stop }
     * 
     */
    public Stop createStop() {
        return new Stop();
    }

    /**
     * Create an instance of {@link TextReference }
     * 
     */
    public TextReference createTref() {
        return new TextReference();
    }

    /**
     * Create an instance of {@link FeFuncR }
     * 
     */
    public FeFuncR createFeFuncR() {
        return new FeFuncR();
    }

    /**
     * Create an instance of {@link FontFaceFormat }
     * 
     */
    public FontFaceFormat createFontFaceFormat() {
        return new FontFaceFormat();
    }

    /**
     * Create an instance of {@link FeColorMatrix }
     * 
     */
    public FeColorMatrix createFeColorMatrix() {
        return new FeColorMatrix();
    }

    /**
     * Create an instance of {@link FeComponentTransfer }
     * 
     */
    public FeComponentTransfer createFeComponentTransfer() {
        return new FeComponentTransfer();
    }

    /**
     * Create an instance of {@link FeFuncB }
     * 
     */
    public FeFuncB createFeFuncB() {
        return new FeFuncB();
    }

    /**
     * Create an instance of {@link FeFuncA }
     * 
     */
    public FeFuncA createFeFuncA() {
        return new FeFuncA();
    }

    /**
     * Create an instance of {@link FeMorphology }
     * 
     */
    public FeMorphology createFeMorphology() {
        return new FeMorphology();
    }

    /**
     * Create an instance of {@link FeMerge }
     * 
     */
    public FeMerge createFeMerge() {
        return new FeMerge();
    }

    /**
     * Create an instance of {@link FeMergeNode }
     * 
     */
    public FeMergeNode createFeMergeNode() {
        return new FeMergeNode();
    }

    /**
     * Create an instance of {@link FePointLight }
     * 
     */
    public FePointLight createFePointLight() {
        return new FePointLight();
    }

    /**
     * Create an instance of {@link FeDiffuseLighting }
     * 
     */
    public FeDiffuseLighting createFeDiffuseLighting() {
        return new FeDiffuseLighting();
    }

    /**
     * Create an instance of {@link FeDistantLight }
     * 
     */
    public FeDistantLight createFeDistantLight() {
        return new FeDistantLight();
    }

    /**
     * Create an instance of {@link FeSpotLight }
     * 
     */
    public FeSpotLight createFeSpotLight() {
        return new FeSpotLight();
    }

    /**
     * Create an instance of {@link FeBlend }
     * 
     */
    public FeBlend createFeBlend() {
        return new FeBlend();
    }

    /**
     * Create an instance of {@link VerticalKerning }
     * 
     */
    public VerticalKerning createVkern() {
        return new VerticalKerning();
    }

    /**
     * Create an instance of {@link FeSpecularLighting }
     * 
     */
    public FeSpecularLighting createFeSpecularLighting() {
        return new FeSpecularLighting();
    }

    /**
     * Create an instance of {@link FeTile }
     * 
     */
    public FeTile createFeTile() {
        return new FeTile();
    }

    /**
     * Create an instance of {@link FontFaceName }
     * 
     */
    public FontFaceName createFontFaceName() {
        return new FontFaceName();
    }

    /**
     * Create an instance of {@link FeDisplacementMap }
     * 
     */
    public FeDisplacementMap createFeDisplacementMap() {
        return new FeDisplacementMap();
    }

    /**
     * Create an instance of {@link TextPath }
     * 
     */
    public TextPath createTextPath() {
        return new TextPath();
    }

    /**
     * Create an instance of {@link FeFlood }
     * 
     */
    public FeFlood createFeFlood() {
        return new FeFlood();
    }

    /**
     * Create an instance of {@link FontFaceUri }
     * 
     */
    public FontFaceUri createFontFaceUri() {
        return new FontFaceUri();
    }

    /**
     * Create an instance of {@link FontFaceSrc }
     * 
     */
    public FontFaceSrc createFontFaceSrc() {
        return new FontFaceSrc();
    }

    /**
     * Create an instance of {@link FeGaussianBlur }
     * 
     */
    public FeGaussianBlur createFeGaussianBlur() {
        return new FeGaussianBlur();
    }

    /**
     * Create an instance of {@link Glyph }
     * 
     */
    public Glyph createGlyph() {
        return new Glyph();
    }

    /**
     * Create an instance of {@link MissingGlyph }
     * 
     */
    public MissingGlyph createMissingGlyph() {
        return new MissingGlyph();
    }

}
